apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: milton-iris-pipeline # executable id, must be unique across all your workflows (YAML files)
  annotations:
    scenarios.ai.sap.com/description: "Model to classify the popular iris dataset"
    scenarios.ai.sap.com/name: "Milton Iris DataSet Classifier" # Scenario name should be the use case
    executables.ai.sap.com/description: "Train with popular iris dataset"
    executables.ai.sap.com/name: "Milton iris training" # Executable name should describe the workflow in the use case
    artifacts.ai.sap.com/irismodel.kind: "model" # Helps in suggesting the kind of artifact that can be generated.
  labels:
    scenarios.ai.sap.com/id: "milton-iris-classifier"
    ai.sap.com/version: "1.0"
spec:
  imagePullSecrets:
    - name: milton-credentials # your docker registry secret
  entrypoint: mypipeline
  templates:
  - name: mypipeline
    steps:
    - - name: mypredictor
        template: mycodeblock1

  - name: mycodeblock1
    outputs:
      artifacts:
        - name: irisclassifiermodel # local identifier name to the workflow
          globalName: irismodel # name of the artifact generated, and folder name when placed in S3, complete directory will be `../<executaion_id>/irismodel`. Also used above in annotation
          path: /app/model/ # from which folder in docker image (after running workflow step) copy contents to cloud storage
          archive:
            none:   # specify not to compress while uploading to cloud
              {}
    container:
      image: docker.io/miltonc/iris-model:01 # Your docker image name
      command: ["/bin/sh", "-c"]
      args:
        - "python /app/src/main.py"
